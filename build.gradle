buildscript {
  apply from: 'dependencies.gradle'
}

plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
	maven { url "https://maven.terraformersmc.com/releases/" } // Mod Menu
	maven { url "https://maven.isxander.dev/releases" } // YACL
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"web-chat" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.terraformersmc:modmenu:${project.mod_menu_version}"
	modImplementation "dev.isxander:yet-another-config-lib:${project.yacl_version}"

	// Java dependencies
	// Compile only
	annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
	compileOnly "org.projectlombok:lombok:${project.lombok_version}"

	// Include
	implementation "io.javalin:javalin:${project.javalin_version}"
	include "io.javalin:javalin:${project.javalin_version}"

    implementation "org.xerial:sqlite-jdbc:${project.xerial_version}"
    include "org.xerial:sqlite-jdbc:${project.xerial_version}"

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}



jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}

}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

task checkGitStatus {
    doLast {
        def currentBranch = "git rev-parse --abbrev-ref HEAD".execute().text.trim()
        if (currentBranch != "main") {
            println "\u001B[33mWarning: You're building on branch '$currentBranch' instead of 'main'\u001B[0m"
        }

        def status = "git status -sb".execute().text
        if (status.contains("[behind")) {
            println "\u001B[33mWarning: Your branch is behind the remote origin\u001B[0m"
        }
    }
}

// Hook it into your build process
build.dependsOn checkGitStatus
